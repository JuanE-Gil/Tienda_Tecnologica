/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.*;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static vista.InterGestionarCategoria.jTable_categoria;
import modelo.Categoria;
import modelo.Marca;

/**
 *
 * @author JuanE
 */
public class InterGestionarProducto extends javax.swing.JInternalFrame {

    private int IdProducto;

    public InterGestionarProducto() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Productos");

        cargarTablaProductos();
        cargarComboBoxCategorias(jComboBox_categoria);
        cargarComboBoxMarcas(jComboBox_marca);

        ImageIcon wallpaper = new ImageIcon("src/img/fondo3.png");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_productos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Txt_ID = new javax.swing.JTextField();
        Txt_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Txt_precio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_marca = new javax.swing.JComboBox<>();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        Txt_descripcion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_productosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_productos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Productos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setForeground(new java.awt.Color(0, 0, 0));
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("ID:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        Txt_ID.setBackground(new java.awt.Color(255, 255, 255));
        Txt_ID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Txt_ID.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(Txt_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 170, -1));

        Txt_nombre.setBackground(new java.awt.Color(255, 255, 255));
        Txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Txt_nombre.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(Txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombre:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Descripcion:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        Txt_precio.setBackground(new java.awt.Color(255, 255, 255));
        Txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Txt_precio.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(Txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 170, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Categoria:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Precio:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        jComboBox_marca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_marca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Marca" }));
        jPanel3.add(jComboBox_marca, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 170, -1));

        jComboBox_categoria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria" }));
        jPanel3.add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 170, -1));

        Txt_descripcion.setBackground(new java.awt.Color(255, 255, 255));
        Txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Txt_descripcion.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(Txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Marca:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_productosMouseClicked

    }//GEN-LAST:event_jTable_productosMouseClicked

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        // Obtener los datos del producto a actualizar
        int idProducto = Integer.parseInt(Txt_ID.getText());
        String nombreProducto = Txt_nombre.getText().trim();
        String descripcion = Txt_descripcion.getText().trim();
        double precio = Double.parseDouble(Txt_precio.getText());
        String marcaSeleccionada = jComboBox_marca.getSelectedItem().toString();
        String categoriaSeleccionada = jComboBox_categoria.getSelectedItem().toString();

// Obtener el ID de la marca y categoría seleccionadas
        int idMarca = obtenerIdMarca(marcaSeleccionada);
        int idCategoria = obtenerIdCategoria(categoriaSeleccionada);

        try
        {
            Connection con = Conexion.conectar();
            CallableStatement cs = con.prepareCall("{CALL actualizar_producto(?,?,?,?,?,?)}");
            cs.setInt(1, idProducto);
            cs.setString(2, nombreProducto);
            cs.setString(3, descripcion);
            cs.setDouble(4, precio);
            cs.setInt(5, idMarca);
            cs.setInt(6, idCategoria);

            cs.execute();
            cs.close();
            con.close();
            cargarTablaProductos();
            Txt_ID.setText("");
            Txt_nombre.setText("");
            Txt_descripcion.setText("");
            Txt_precio.setText("");
            JOptionPane.showMessageDialog(null, "El Producto con ID " + idProducto + " ha sido actualizado exitosamente.");
        } catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error al actualizar el producto.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        // TODO add your handling code here:
        int idProducto = Integer.parseInt(Txt_ID.getText()); // ID de la categoría a eliminar
        try
        {
            Connection con = Conexion.conectar();
            CallableStatement cs = con.prepareCall("{CALL eliminar_producto(?)}");
            cs.setInt(1, idProducto);
            cs.execute();
            cs.close();
            con.close();
            cargarTablaProductos();
            Txt_ID.setText("");
            Txt_nombre.setText("");
            Txt_descripcion.setText("");
            Txt_precio.setText("");
            JOptionPane.showMessageDialog(null, "El Producto con ID " + idProducto + " ha sido eliminada.");
        } catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar el Producto.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Txt_ID;
    private javax.swing.JTextField Txt_descripcion;
    private javax.swing.JTextField Txt_nombre;
    private javax.swing.JTextField Txt_precio;
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_marca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_productos;
    // End of variables declaration//GEN-END:variables

    public void cargarTablaProductos() {
        // Definir el model de la tabla
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Descripción");
        model.addColumn("Precio");
        model.addColumn("Marca");
        model.addColumn("Categoría");

        // Obtener los datos de los productos y agregarlos al model
        try (
                Connection con = Conexion.conectar(); CallableStatement cs = con.prepareCall("{CALL listar_productos()}"))
        {

            ResultSet rs = cs.executeQuery();
            while (rs.next())
            {
                Object fila[] = new Object[6];
                fila[0] = rs.getInt("id_producto");
                fila[1] = rs.getString("nombre");
                fila[2] = rs.getString("descripcion");
                fila[3] = rs.getDouble("precio");
                fila[4] = rs.getString("marca");
                fila[5] = rs.getString("categoria");
                model.addRow(fila);
            }

        } catch (SQLException e)
        {
            System.out.println("Error al llenar la tabla de productos: " + e);
        }

        // Asignar el model a la tabla
        jTable_productos.setModel(model);

        // Agregar evento para obtener el producto seleccionado
        jTable_productos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_productos.rowAtPoint(e.getPoint());
                int columna_id = 0;
                int columna_nombre = 1;
                int columna_descripcion = 2;
                int columna_precio = 3;
                int columna_marca = 4;
                int columna_categoria = 5;

                if (fila_point > -1)
                {
                    int idProducto = (int) model.getValueAt(fila_point, columna_id);
                    String nombreProducto = (String) model.getValueAt(fila_point, columna_nombre);
                    String descripcionProducto = (String) model.getValueAt(fila_point, columna_descripcion);
                    double precioProducto = (double) model.getValueAt(fila_point, columna_precio);
                    String marcaProducto = (String) model.getValueAt(fila_point, columna_marca);
                    String categoriaProducto = (String) model.getValueAt(fila_point, columna_categoria);

                    Txt_ID.setText(String.valueOf(idProducto));
                    Txt_ID.enable(false);

                    Txt_nombre.setText(nombreProducto);
                    Txt_descripcion.setText(descripcionProducto);
                    Txt_precio.setText(String.valueOf(precioProducto));
                    jComboBox_marca.setSelectedItem(marcaProducto);
                    jComboBox_categoria.setSelectedItem(categoriaProducto);
                }
            }
        });
    }

    public void cargarComboBoxCategorias(JComboBox comboBox) {
        Connection conn = null;
        CallableStatement cs = null;
        ResultSet rs = null;

        try
        {
            conn = Conexion.conectar();
            cs = conn.prepareCall("{CALL listar_categorias()}");
            rs = cs.executeQuery();

            // Crear modelo de ComboBox
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            model.addElement("Seleccionar Categoria");

            // Agregar elementos al modelo
            while (rs.next())
            {
                int id = rs.getInt("id_categoria");
                String nombre = rs.getString("nombre");
                model.addElement(new Categoria(id, nombre)); // Clase Categoria que encapsula el id y nombre de la categoría
            }

            // Establecer modelo de ComboBox
            comboBox.setModel(model);

        } catch (SQLException e)
        {
            System.out.println("Error al cargar ComboBox de categorías: " + e.getMessage());
        } finally
        {
            try
            {
                if (rs != null)
                {
                    rs.close();
                }
                if (cs != null)
                {
                    cs.close();
                }
                if (conn != null)
                {
                    conn.close();
                }
            } catch (SQLException e)
            {
                System.out.println("Error al cerrar conexión: " + e.getMessage());
            }
        }
    }

    public void cargarComboBoxMarcas(JComboBox<String> comboBox) {
        try
        {
            Connection connection = Conexion.conectar();
            CallableStatement statement = connection.prepareCall("{CALL listar_marcas()}");
            ResultSet result = statement.executeQuery();

            while (result.next())
            {
                String nombreMarca = result.getString("nombre");
                comboBox.addItem(nombreMarca);
            }

            result.close();
            statement.close();
            connection.close();
        } catch (SQLException e)
        {
            System.out.println("Error al cargar ComboBox: " + e.getMessage());
        }
    }

    private int obtenerIdMarca(String marca) {
        int idMarca = -1;
        try
        {
            Connection con = Conexion.conectar();
            PreparedStatement ps = con.prepareStatement("SELECT id_marca FROM Marcas WHERE nombre = ?");
            ps.setString(1, marca);
            ResultSet rs = ps.executeQuery();
            if (rs.next())
            {
                idMarca = rs.getInt("id_marca");
            }
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException e)
        {
            e.printStackTrace();
        }
        return idMarca;
    }

    private int obtenerIdCategoria(String categoria) {
        int idCategoria = -1;
        try
        {
            Connection con = Conexion.conectar();
            PreparedStatement ps = con.prepareStatement("SELECT id_categoria FROM Categorias WHERE nombre = ?");
            ps.setString(1, categoria);
            ResultSet rs = ps.executeQuery();
            if (rs.next())
            {
                idCategoria = rs.getInt("id_categoria");
            }
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException e)
        {
            e.printStackTrace();
        }
        return idCategoria;
    }

}
